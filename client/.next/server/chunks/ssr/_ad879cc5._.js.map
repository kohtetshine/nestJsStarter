{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { AuthContainer } from '../components';\n\nexport default function Home() {\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [signedInUser, setSignedInUser] = useState<{ email: string } | null>(null);\n\n  useEffect(() => {\n    // Check if already signed in\n    const jwt = typeof window !== 'undefined' ? localStorage.getItem('jwt') : null;\n    if (!jwt) return;\n\n    fetch('/api/auth/me', {\n      headers: { Authorization: `Bearer ${jwt}` },\n      cache: 'no-store',\n    })\n      .then(async (r) => {\n        if (!r.ok) return;\n        const d = await r.json();\n        if (d?.user?.email) {\n          setSignedInUser({ email: d.user.email });\n        }\n      })\n      .catch(() => null);\n  }, []);\n\n  const handleSignIn = async (data: { email: string; password: string }) => {\n    setError(null);\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!res.ok) throw new Error(await res.text());\n      const result = await res.json();\n      if (result?.token) localStorage.setItem('jwt', result.token);\n      setSignedInUser({ email: result?.user?.email ?? data.email });\n    } catch (err: any) {\n      setError(err.message || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSignUp = async (data: { email: string; password: string; confirmPassword: string }) => {\n    setError(null);\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!res.ok) throw new Error(await res.text());\n      // After successful signup, user needs to sign in\n      setError('Account created successfully! Please sign in.');\n    } catch (err: any) {\n      setError(err.message || 'Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSignOut = () => {\n    localStorage.removeItem('jwt');\n    setSignedInUser(null);\n  };\n\n  const handleForgotPassword = () => {\n    // Placeholder for forgot password functionality\n    alert('Forgot password functionality would be implemented here');\n  };\n\n  return (\n    <main className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\n      <div className=\"w-full max-w-md space-y-8\">\n        <div className=\"text-center space-y-2\">\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent\">Welcome</h1>\n          <p className=\"text-slate-600\">Sign in to your account or create a new one</p>\n        </div>\n\n        {signedInEmail ? (\n          <div className=\"bg-white rounded-2xl shadow-xl border border-slate-200 p-8\">\n            <div className=\"text-center space-y-6\">\n              <div className=\"p-6 rounded-xl bg-emerald-50 border border-emerald-200 text-emerald-800\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <svg className=\"w-6 h-6 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium\">Welcome back!</p>\n                <p className=\"text-sm text-emerald-700 mt-1\">{signedInEmail}</p>\n              </div>\n              <button\n                onClick={logout}\n                className=\"w-full py-3 px-4 text-slate-600 border border-slate-300 rounded-xl hover:bg-slate-50 hover:border-slate-400 transition-all duration-200 font-medium\"\n              >\n                Sign Out\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-2xl shadow-xl border border-slate-200 overflow-hidden\">\n            <div className=\"flex border-b border-slate-200\">\n              <button\n                className={`flex-1 py-4 text-sm font-medium transition-all duration-300 ${\n                  tab === 'login'\n                    ? 'border-b-2 border-blue-500 text-blue-600 bg-blue-50'\n                    : 'text-slate-500 hover:text-slate-700 hover:bg-slate-50'\n                }`}\n                onClick={() => {\n                  setTab('login');\n                  setError(null);\n                  setEmailError(null);\n                  setPasswordError(null);\n                }}\n              >\n                Sign In\n              </button>\n              <button\n                className={`flex-1 py-4 text-sm font-medium transition-all duration-300 ${\n                  tab === 'signup'\n                    ? 'border-b-2 border-blue-500 text-blue-600 bg-blue-50'\n                    : 'text-slate-500 hover:text-slate-700 hover:bg-slate-50'\n                }`}\n                onClick={() => {\n                  setTab('signup');\n                  setError(null);\n                  setEmailError(null);\n                  setPasswordError(null);\n                }}\n              >\n                Sign Up\n              </button>\n            </div>\n\n            <div className=\"p-8\">\n\n              {error && (\n                <div className=\"mb-6 p-4 rounded-xl bg-red-50 border border-red-200 text-red-700 text-sm flex items-center\">\n                  <svg className=\"w-5 h-5 text-red-500 mr-2 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  {error}\n                </div>\n              )}\n\n              {tab === 'login' ? (\n                <form onSubmit={onLogin} className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-700\">\n                      Email Address\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        className={`w-full px-4 py-3 pl-12 border rounded-xl focus:outline-none focus:ring-2 transition-all duration-200 text-slate-900 placeholder-slate-400 bg-white ${\n                          emailError\n                            ? 'border-red-300 focus:ring-red-500 focus:border-red-500'\n                            : 'border-slate-300 focus:ring-blue-500 focus:border-blue-500'\n                        }`}\n                        placeholder=\"Enter your email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                      />\n                      <svg className=\"absolute left-4 top-3.5 w-5 h-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\" />\n                      </svg>\n                    </div>\n                    {emailError && <p className=\"text-red-500 text-xs mt-1\">{emailError}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-slate-700\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        className=\"w-full px-4 py-3 pl-12 pr-12 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-slate-900 placeholder-slate-400 bg-white\"\n                        placeholder=\"Enter your password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                      />\n                      <svg className=\"absolute left-4 top-3.5 w-5 h-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                      <button\n                        type=\"button\"\n                        className=\"absolute right-4 top-3.5 text-slate-400 hover:text-slate-600\"\n                        onClick={() => setShowPassword(!showPassword)}\n                      >\n                        {showPassword ? (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                          </svg>\n                        ) : (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          </svg>\n                        )}\n                      </button>\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className={`w-full py-3 px-4 rounded-xl font-medium transition-all duration-200 ${\n                      loading || !isFormValid\n                        ? 'bg-slate-300 text-slate-500 cursor-not-allowed'\n                        : 'bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 shadow-lg hover:shadow-xl'\n                    }`}\n                    disabled={loading || !isFormValid}\n                  >\n                    {loading ? (\n                      <div className=\"flex items-center justify-center\">\n                        <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        Signing in...\n                      </div>\n                    ) : 'Sign In'}\n                  </button>\n\n                  <div className=\"text-center\">\n                    <button type=\"button\" className=\"text-sm text-blue-600 hover:text-blue-700 hover:underline\">\n                      Forgot your password?\n                    </button>\n                  </div>\n                </form>\n              ) : (\n                <form onSubmit={onSignup} className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"signup-email\" className=\"block text-sm font-medium text-slate-700\">\n                      Email Address\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"signup-email\"\n                        type=\"email\"\n                        className={`w-full px-4 py-3 pl-12 border rounded-xl focus:outline-none focus:ring-2 transition-all duration-200 text-slate-900 placeholder-slate-400 bg-white ${\n                          emailError\n                            ? 'border-red-300 focus:ring-red-500 focus:border-red-500'\n                            : 'border-slate-300 focus:ring-blue-500 focus:border-blue-500'\n                        }`}\n                        placeholder=\"Enter your email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                      />\n                      <svg className=\"absolute left-4 top-3.5 w-5 h-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\" />\n                      </svg>\n                    </div>\n                    {emailError && <p className=\"text-red-500 text-xs mt-1\">{emailError}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"signup-password\" className=\"block text-sm font-medium text-slate-700\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"signup-password\"\n                        type={showPassword ? 'text' : 'password'}\n                        className={`w-full px-4 py-3 pl-12 pr-12 border rounded-xl focus:outline-none focus:ring-2 transition-all duration-200 text-slate-900 placeholder-slate-400 bg-white ${\n                          passwordError\n                            ? 'border-red-300 focus:ring-red-500 focus:border-red-500'\n                            : 'border-slate-300 focus:ring-blue-500 focus:border-blue-500'\n                        }`}\n                        placeholder=\"Create a strong password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                      />\n                      <svg className=\"absolute left-4 top-3.5 w-5 h-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                      <button\n                        type=\"button\"\n                        className=\"absolute right-4 top-3.5 text-slate-400 hover:text-slate-600\"\n                        onClick={() => setShowPassword(!showPassword)}\n                      >\n                        {showPassword ? (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                          </svg>\n                        ) : (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          </svg>\n                        )}\n                      </button>\n                    </div>\n                    {passwordError && <p className=\"text-red-500 text-xs mt-1\">{passwordError}</p>}\n\n                    {password && (\n                      <div className=\"mt-2\">\n                        <div className=\"flex justify-between text-xs text-slate-600 mb-1\">\n                          <span>Password strength</span>\n                          <span className={passwordStrength.color}>{passwordStrength.label}</span>\n                        </div>\n                        <div className=\"w-full bg-slate-200 rounded-full h-2\">\n                          <div\n                            className={`h-2 rounded-full transition-all duration-300 ${\n                              passwordStrength.score <= 1 ? 'bg-red-500' :\n                              passwordStrength.score <= 2 ? 'bg-orange-500' :\n                              passwordStrength.score <= 3 ? 'bg-yellow-500' :\n                              passwordStrength.score <= 4 ? 'bg-blue-500' : 'bg-green-500'\n                            }`}\n                            style={{ width: `${(passwordStrength.score / 5) * 100}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"confirm-password\" className=\"block text-sm font-medium text-slate-700\">\n                      Confirm Password\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"confirm-password\"\n                        type={showConfirmPassword ? 'text' : 'password'}\n                        className={`w-full px-4 py-3 pl-12 pr-12 border rounded-xl focus:outline-none focus:ring-2 transition-all duration-200 text-slate-900 placeholder-slate-400 bg-white ${\n                          confirmPassword && password !== confirmPassword\n                            ? 'border-red-300 focus:ring-red-500 focus:border-red-500'\n                            : 'border-slate-300 focus:ring-blue-500 focus:border-blue-500'\n                        }`}\n                        placeholder=\"Confirm your password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                      />\n                      <svg className=\"absolute left-4 top-3.5 w-5 h-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                      <button\n                        type=\"button\"\n                        className=\"absolute right-4 top-3.5 text-slate-400 hover:text-slate-600\"\n                        onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                      >\n                        {showConfirmPassword ? (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                          </svg>\n                        ) : (\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          </svg>\n                        )}\n                      </button>\n                    </div>\n                    {confirmPassword && password !== confirmPassword && (\n                      <p className=\"text-red-500 text-xs mt-1\">Passwords do not match</p>\n                    )}\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className={`w-full py-3 px-4 rounded-xl font-medium transition-all duration-200 ${\n                      loading || !isFormValid\n                        ? 'bg-slate-300 text-slate-500 cursor-not-allowed'\n                        : 'bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 shadow-lg hover:shadow-xl'\n                    }`}\n                    disabled={loading || !isFormValid}\n                  >\n                    {loading ? (\n                      <div className=\"flex items-center justify-center\">\n                        <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        Creating Account...\n                      </div>\n                    ) : 'Create Account'}\n                  </button>\n                </form>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}